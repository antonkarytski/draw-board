{"version":3,"sources":["components/drawBoard/hook.drawBoard.ts","components/drawBoard/DrawBoard.tsx","components/buttons/Button.tsx","components/buttons/PlayButton.tsx","components/drawBoard/hook.drawBoardHistory.ts","lib/findLastIndex.ts","components/drawBoard/RepeaterBoard.tsx","App.tsx","index.tsx","components/drawBoard/styles.module.scss","styles.module.scss","components/buttons/styles.module.scss"],"names":["withMouseEvent","handler","event","x","nativeEvent","offsetX","y","offsetY","timeStamp","useDrawBoard","saveHistoryTo","canvasRef","useRef","prevPosition","resetPosition","current","drawDot","ctx","getContext","beginPath","arc","Math","PI","fill","push","firstClick","drawLine","moveTo","lineTo","stroke","clear","clearRect","canvas","width","height","DrawBoard","className","cx","classes","Canvas","ref","onMouseDown","onMouseMove","buttons","onMouseUp","Button","label","onClick","PlayButton","isClicked","buttonProps","useDrawBoardHistory","history","controller","currentPointIndex","isPlaying","useState","isPlayingState","setIsPlayingState","draw","point","withDelay","length","newPointIndex","pause","nextDelay","timer","setTimeout","clearTimeout","togglePlaying","stepBack","currentStepStartIndex","array","predicate","l","findLastIndex","index","lastPrevStepIndex","slice","forEach","stepForward","nextFirstClick","findIndex","nextStepIndex","RepeaterBoard","ButtonsSet","App","repeater","keys","setKeys","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.3d46cff9.chunk.js","sourcesContent":["import React, { MutableRefObject, useRef } from \"react\";\n\ntype Position = {\n  x: number;\n  y: number;\n};\n\nexport type Point = {\n  timeStamp: number;\n} & Position;\n\nexport type PointsHistory = ({\n  firstClick?: boolean;\n} & Point)[];\n\nexport type UseDrawBoardProps = {\n  saveHistoryTo?: MutableRefObject<PointsHistory>;\n};\n\nexport function withMouseEvent(\n  handler: (position: Point) => void,\n  event: React.MouseEvent<HTMLCanvasElement, MouseEvent>\n) {\n  const point = {\n    x: event.nativeEvent.offsetX,\n    y: event.nativeEvent.offsetY,\n    timeStamp: event.timeStamp,\n  };\n  handler(point);\n}\n\nexport function useDrawBoard({ saveHistoryTo }: UseDrawBoardProps = {}) {\n  const canvasRef = useRef<null | HTMLCanvasElement>(null);\n  const prevPosition = useRef<Position | null>(null);\n\n  function resetPosition() {\n    prevPosition.current = null;\n  }\n\n  function drawDot({ x, y, timeStamp }: Point) {\n    const ctx = canvasRef.current?.getContext(\"2d\");\n    if (!ctx) return;\n    ctx.beginPath();\n    ctx.arc(x, y, 1, 0, 2 * Math.PI);\n    ctx.fill();\n    prevPosition.current = { x, y };\n    if (saveHistoryTo) {\n      saveHistoryTo.current.push({ x, y, timeStamp, firstClick: true });\n    }\n  }\n\n  function drawLine({ x, y, timeStamp }: Point) {\n    const ctx = canvasRef.current?.getContext(\"2d\");\n    if (!ctx) return;\n    ctx.beginPath();\n    ctx.moveTo(prevPosition.current?.x ?? x, prevPosition.current?.y ?? y);\n    ctx.lineTo(x, y);\n    ctx.stroke();\n    prevPosition.current = { x, y };\n    if (saveHistoryTo) {\n      saveHistoryTo.current.push({ x, y, timeStamp });\n    }\n  }\n\n  function clear() {\n    const ctx = canvasRef.current?.getContext(\"2d\");\n    if (!ctx) return;\n    prevPosition.current = null;\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n  }\n\n  return {\n    drawDot,\n    drawLine,\n    clear,\n    resetPosition,\n    canvasRef,\n  };\n}\n","import React from \"react\";\nimport {\n  useDrawBoard,\n  UseDrawBoardProps,\n  withMouseEvent,\n} from \"./hook.drawBoard\";\nimport classes from \"./styles.module.scss\";\nimport cx from \"classnames\";\n\ntype DrawBoardProps = { className?: string } & UseDrawBoardProps;\n\nexport default function DrawBoard({\n  saveHistoryTo,\n  className,\n}: DrawBoardProps) {\n  const { canvasRef, drawLine, drawDot, resetPosition } = useDrawBoard({\n    saveHistoryTo,\n  });\n\n  return (\n    <canvas\n      className={cx(classes.Canvas, className)}\n      width={500}\n      height={500}\n      ref={canvasRef}\n      onMouseDown={(event) => withMouseEvent(drawDot, event)}\n      onMouseMove={(event) => {\n        if (!event.buttons) return;\n        withMouseEvent(drawLine, event);\n      }}\n      onMouseUp={resetPosition}\n    />\n  );\n}\n","import React from \"react\";\r\nimport classes from \"./styles.module.scss\";\r\nimport cx from \"classnames\";\r\n\r\nexport type ButtonProps = {\r\n  onClick: () => void;\r\n  label: string;\r\n  className?: string;\r\n};\r\n\r\nexport default function Button({ label, onClick, className }: ButtonProps) {\r\n  return (\r\n    <button className={cx(classes.Button, className)} onClick={onClick}>\r\n      {label}\r\n    </button>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Button, { ButtonProps } from \"./Button\";\r\n\r\ntype PlayButtonProps = {\r\n  isClicked: boolean;\r\n} & Omit<ButtonProps, \"label\">;\r\n\r\nexport default function PlayButton({\r\n  isClicked,\r\n  ...buttonProps\r\n}: PlayButtonProps) {\r\n  return <Button label={isClicked ? \"Pause\" : \"Play\"} {...buttonProps} />;\r\n}\r\n","import { MutableRefObject, useRef, useState } from \"react\";\nimport { PointsHistory, useDrawBoard } from \"./hook.drawBoard\";\nimport { findLastIndex } from \"../../lib/findLastIndex\";\n\ntype UseDrawBoardHistoryProps = {\n  history: MutableRefObject<PointsHistory>;\n  controller: Omit<ReturnType<typeof useDrawBoard>, \"canvasRef\">;\n};\n\nexport function useDrawBoardHistory({\n  history,\n  controller,\n}: UseDrawBoardHistoryProps) {\n  const currentPointIndex = useRef(-1);\n  const isPlaying = useRef(false);\n  const [isPlayingState, setIsPlayingState] = useState(false);\n  const { drawDot, drawLine, resetPosition, clear } = controller;\n\n  function draw({ firstClick, ...point }: PointsHistory[0]) {\n    if (firstClick) {\n      resetPosition();\n      drawDot(point);\n      return;\n    }\n    drawLine(point);\n  }\n\n  function withDelay() {\n    if (!isPlaying.current || !history.current?.length) return;\n    if (currentPointIndex.current >= history.current.length - 1) {\n      clear();\n      currentPointIndex.current = -1;\n    }\n    const newPointIndex = currentPointIndex.current + 1;\n    currentPointIndex.current = newPointIndex;\n    const point = history.current[newPointIndex];\n    draw(point);\n    if (newPointIndex === history.current.length - 1) {\n      pause();\n    }\n    if (!isPlaying.current) return;\n    const nextDelay =\n      history.current[currentPointIndex.current + 1].timeStamp -\n      point.timeStamp;\n    const timer = setTimeout(\n      () => {\n        withDelay();\n        clearTimeout(timer);\n      },\n      nextDelay > 500 ? 500 : nextDelay\n    );\n  }\n\n  function togglePlaying() {\n    if (!history.current.length) return;\n    isPlaying.current = !isPlaying.current;\n    setIsPlayingState(isPlaying.current);\n    if (isPlaying.current) withDelay();\n  }\n\n  function pause() {\n    isPlaying.current = false;\n    setIsPlayingState(false);\n  }\n\n  function stepBack() {\n    if (currentPointIndex.current === -1) return;\n    pause();\n    clear();\n    const currentStepStartIndex = findLastIndex(\n      history.current,\n      ({ firstClick }, index) => {\n        return !!firstClick && index < currentPointIndex.current;\n      }\n    );\n    const lastPrevStepIndex =\n      currentStepStartIndex === -1 ? -1 : currentStepStartIndex - 1;\n    currentPointIndex.current = lastPrevStepIndex;\n    if (lastPrevStepIndex === -1) return;\n    history.current.slice(0, lastPrevStepIndex + 1).forEach(draw);\n  }\n\n  function stepForward() {\n    if (currentPointIndex.current >= history.current.length - 1) return;\n    pause();\n    const nextFirstClick = history.current.findIndex(\n      ({ firstClick }, index) => {\n        return !!firstClick && index > currentPointIndex.current + 1;\n      }\n    );\n    const nextStepIndex =\n      nextFirstClick !== -1 ? nextFirstClick - 1 : history.current.length - 1;\n    history.current\n      .slice(currentPointIndex.current + 1, nextStepIndex + 1)\n      .forEach(draw);\n    currentPointIndex.current = nextStepIndex;\n  }\n\n  return {\n    togglePlaying,\n    stepBack,\n    stepForward,\n    isPlaying: isPlayingState,\n  };\n}\n","export function findLastIndex<T>(\r\n  array: Array<T>,\r\n  predicate: (value: T, index: number, obj: T[]) => boolean\r\n): number {\r\n  let l = array.length;\r\n  while (l--) {\r\n    if (predicate(array[l], l, array)) return l;\r\n  }\r\n  return -1;\r\n}\r\n","import React, { MutableRefObject } from \"react\";\r\nimport { PointsHistory, useDrawBoard } from \"./hook.drawBoard\";\r\nimport classes from \"./styles.module.scss\";\r\nimport PlayButton from \"../buttons/PlayButton\";\r\nimport { useDrawBoardHistory } from \"./hook.drawBoardHistory\";\r\nimport cx from \"classnames\";\r\nimport Button from \"../buttons/Button\";\r\n\r\ntype RepeaterBoardProps = {\r\n  history: MutableRefObject<PointsHistory>;\r\n  className?: string;\r\n};\r\n\r\nexport default function RepeaterBoard({\r\n  history,\r\n  className,\r\n}: RepeaterBoardProps) {\r\n  const { canvasRef, ...controller } = useDrawBoard();\r\n  const {\r\n    stepBack,\r\n    stepForward,\r\n    togglePlaying,\r\n    isPlaying,\r\n  } = useDrawBoardHistory({\r\n    controller,\r\n    history,\r\n  });\r\n\r\n  return (\r\n    <div className={className}>\r\n      <canvas\r\n        width={500}\r\n        height={500}\r\n        ref={canvasRef}\r\n        className={cx(classes.Canvas)}\r\n      />\r\n      <div className={classes.ButtonsSet}>\r\n        <Button label={\"Step back\"} onClick={stepBack} />\r\n        <PlayButton\r\n          className={classes.PlayButton}\r\n          isClicked={isPlaying}\r\n          onClick={togglePlaying}\r\n        />\r\n        <Button label={\"Step forward\"} onClick={stepForward} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useRef, useState } from \"react\";\nimport DrawBoard from \"./components/drawBoard/DrawBoard\";\nimport RepeaterBoard from \"./components/drawBoard/RepeaterBoard\";\nimport classes from \"./styles.module.scss\";\nimport { PointsHistory } from \"./components/drawBoard/hook.drawBoard\";\nimport Button from \"./components/buttons/Button\";\n\nfunction App() {\n  const history = useRef<PointsHistory>([]);\n  const [keys, setKeys] = useState({\n    draw: 1,\n    repeater: 2,\n  });\n\n  function reset() {\n    history.current = [];\n    setKeys(({ draw, repeater }) => ({\n      draw: draw + 1,\n      repeater: repeater + 1,\n    }));\n  }\n\n  return (\n    <div className={classes.App}>\n      <div>\n        <DrawBoard\n          key={keys.draw}\n          saveHistoryTo={history}\n          className={classes.DrawBoard}\n        />\n        <div>\n          <Button label={\"Reset\"} onClick={reset} />\n        </div>\n      </div>\n      <RepeaterBoard\n        key={keys.repeater}\n        history={history}\n        className={classes.RepeaterBoard}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./styles.index.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Canvas\":\"styles_Canvas__3C7m-\",\"ButtonsSet\":\"styles_ButtonsSet__3Xp20\",\"PlayButton\":\"styles_PlayButton__1v80O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"styles_App__2NK-3\",\"DrawBoard\":\"styles_DrawBoard__p1zvK\",\"RepeaterBoard\":\"styles_RepeaterBoard__ukQ3I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"styles_Button__37uBx\"};"],"sourceRoot":""}